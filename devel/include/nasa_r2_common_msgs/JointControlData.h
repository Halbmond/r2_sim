// Generated by gencpp from file nasa_r2_common_msgs/JointControlData.msg
// DO NOT EDIT!


#ifndef NASA_R2_COMMON_MSGS_MESSAGE_JOINTCONTROLDATA_H
#define NASA_R2_COMMON_MSGS_MESSAGE_JOINTCONTROLDATA_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <nasa_r2_common_msgs/JointControlMode.h>
#include <nasa_r2_common_msgs/JointControlCommandMode.h>
#include <nasa_r2_common_msgs/JointControlCalibrationMode.h>
#include <nasa_r2_common_msgs/JointControlClearFaultMode.h>
#include <nasa_r2_common_msgs/JointControlCoeffState.h>

namespace nasa_r2_common_msgs
{
template <class ContainerAllocator>
struct JointControlData_
{
  typedef JointControlData_<ContainerAllocator> Type;

  JointControlData_()
    : controlMode()
    , commandMode()
    , calibrationMode()
    , clearFaultMode()
    , coeffState()  {
    }
  JointControlData_(const ContainerAllocator& _alloc)
    : controlMode(_alloc)
    , commandMode(_alloc)
    , calibrationMode(_alloc)
    , clearFaultMode(_alloc)
    , coeffState(_alloc)  {
  (void)_alloc;
    }



   typedef  ::nasa_r2_common_msgs::JointControlMode_<ContainerAllocator>  _controlMode_type;
  _controlMode_type controlMode;

   typedef  ::nasa_r2_common_msgs::JointControlCommandMode_<ContainerAllocator>  _commandMode_type;
  _commandMode_type commandMode;

   typedef  ::nasa_r2_common_msgs::JointControlCalibrationMode_<ContainerAllocator>  _calibrationMode_type;
  _calibrationMode_type calibrationMode;

   typedef  ::nasa_r2_common_msgs::JointControlClearFaultMode_<ContainerAllocator>  _clearFaultMode_type;
  _clearFaultMode_type clearFaultMode;

   typedef  ::nasa_r2_common_msgs::JointControlCoeffState_<ContainerAllocator>  _coeffState_type;
  _coeffState_type coeffState;




  typedef boost::shared_ptr< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> const> ConstPtr;

}; // struct JointControlData_

typedef ::nasa_r2_common_msgs::JointControlData_<std::allocator<void> > JointControlData;

typedef boost::shared_ptr< ::nasa_r2_common_msgs::JointControlData > JointControlDataPtr;
typedef boost::shared_ptr< ::nasa_r2_common_msgs::JointControlData const> JointControlDataConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace nasa_r2_common_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg'], 'trajectory_msgs': ['/opt/ros/indigo/share/trajectory_msgs/cmake/../msg'], 'nasa_r2_common_msgs': ['/home/vincent/Project/r2_sim/src/deprecated_nasa_r2_common/nasa_r2_common_msgs/msg'], 'geometry_msgs': ['/opt/ros/indigo/share/geometry_msgs/cmake/../msg'], 'visualization_msgs': ['/opt/ros/indigo/share/visualization_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> >
{
  static const char* value()
  {
    return "fedf678b0c3640f2a0cd4265c858b481";
  }

  static const char* value(const ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xfedf678b0c3640f2ULL;
  static const uint64_t static_value2 = 0xa0cd4265c858b481ULL;
};

template<class ContainerAllocator>
struct DataType< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> >
{
  static const char* value()
  {
    return "nasa_r2_common_msgs/JointControlData";
  }

  static const char* value(const ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> >
{
  static const char* value()
  {
    return "JointControlMode            controlMode\n\
JointControlCommandMode     commandMode\n\
JointControlCalibrationMode calibrationMode\n\
JointControlClearFaultMode  clearFaultMode\n\
JointControlCoeffState      coeffState\n\
\n\
================================================================================\n\
MSG: nasa_r2_common_msgs/JointControlMode\n\
uint8 state\n\
uint8 IGNORE     = 0\n\
uint8 INVALID    = 1\n\
uint8 BOOTLOADER = 2\n\
uint8 FAULTED    = 3\n\
uint8 SAFE       = 4\n\
uint8 OFF        = 5\n\
uint8 PARK       = 6\n\
uint8 NEUTRAL    = 7\n\
uint8 DRIVE      = 8\n\
\n\
================================================================================\n\
MSG: nasa_r2_common_msgs/JointControlCommandMode\n\
uint8 state\n\
uint8 IGNORE          = 0\n\
uint8 INVALID         = 1\n\
uint8 MOTCOM          = 2\n\
uint8 MULTILOOPSTEP   = 3\n\
uint8 MULTILOOPSMOOTH = 4\n\
uint8 ACTUATOR        = 5\n\
uint8 STALLMODE       = 6\n\
\n\
================================================================================\n\
MSG: nasa_r2_common_msgs/JointControlCalibrationMode\n\
uint8 state\n\
uint8 IGNORE       = 0\n\
uint8 DISABLE      = 1\n\
uint8 ENABLE       = 2\n\
uint8 UNCALIBRATED = 3\n\
\n\
================================================================================\n\
MSG: nasa_r2_common_msgs/JointControlClearFaultMode\n\
uint8 state\n\
uint8 IGNORE  = 0\n\
uint8 DISABLE = 1\n\
uint8 ENABLE  = 2\n\
\n\
================================================================================\n\
MSG: nasa_r2_common_msgs/JointControlCoeffState\n\
uint8 state\n\
uint8 NOTLOADED = 0\n\
uint8 LOADED    = 1\n\
";
  }

  static const char* value(const ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.controlMode);
      stream.next(m.commandMode);
      stream.next(m.calibrationMode);
      stream.next(m.clearFaultMode);
      stream.next(m.coeffState);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct JointControlData_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::nasa_r2_common_msgs::JointControlData_<ContainerAllocator>& v)
  {
    s << indent << "controlMode: ";
    s << std::endl;
    Printer< ::nasa_r2_common_msgs::JointControlMode_<ContainerAllocator> >::stream(s, indent + "  ", v.controlMode);
    s << indent << "commandMode: ";
    s << std::endl;
    Printer< ::nasa_r2_common_msgs::JointControlCommandMode_<ContainerAllocator> >::stream(s, indent + "  ", v.commandMode);
    s << indent << "calibrationMode: ";
    s << std::endl;
    Printer< ::nasa_r2_common_msgs::JointControlCalibrationMode_<ContainerAllocator> >::stream(s, indent + "  ", v.calibrationMode);
    s << indent << "clearFaultMode: ";
    s << std::endl;
    Printer< ::nasa_r2_common_msgs::JointControlClearFaultMode_<ContainerAllocator> >::stream(s, indent + "  ", v.clearFaultMode);
    s << indent << "coeffState: ";
    s << std::endl;
    Printer< ::nasa_r2_common_msgs::JointControlCoeffState_<ContainerAllocator> >::stream(s, indent + "  ", v.coeffState);
  }
};

} // namespace message_operations
} // namespace ros

#endif // NASA_R2_COMMON_MSGS_MESSAGE_JOINTCONTROLDATA_H
